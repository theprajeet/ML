# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_breast_cancer
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans
from sklearn.metrics import accuracy_score, confusion_matrix

# Load the Breast Cancer dataset
data = load_breast_cancer()
X = data.data
y = data.target  # Actual labels (0 = malignant, 1 = benign)

# Standardize the data (important for K-Means)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Apply K-Means clustering (with 2 clusters since we have 2 classes)
kmeans = KMeans(n_clusters=2, random_state=42, n_init=10)
kmeans.fit(X_scaled)
y_pred = kmeans.labels_

# Since KMeans assigns cluster labels arbitrarily (e.g., 0/1 or 1/0),
# we flip the labels if necessary to better match the true labels
if accuracy_score(y, y_pred) < 0.5:
    y_pred = 1 - y_pred  # Flip labels

# Generate the confusion matrix
cm = confusion_matrix(y, y_pred)
print("\nConfusion Matrix:")
print(cm)

# Extract values from confusion matrix
TP = cm[0, 0]  # True Positive
FN = cm[0, 1]  # False Negative
FP = cm[1, 0]  # False Positive
TN = cm[1, 1]  # True Negative

# Print explanation of the confusion matrix
print(f"\nTrue Positive (TP): {TP} — Malignant samples correctly classified as malignant.")
print(f"False Negative (FN): {FN} — Malignant samples incorrectly classified as benign.")
print(f"False Positive (FP): {FP} — Benign samples incorrectly classified as malignant.")
print(f"True Negative (TN): {TN} — Benign samples correctly classified as benign.")

# Print the accuracy score
accuracy = accuracy_score(y, y_pred)
print(f"\nK-Means Clustering Accuracy: {accuracy * 100:.2f}%")

# Reduce dimensions to 2D for visualization using PCA
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# Plot the clusters
plt.figure(figsize=(10, 6))
sns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1], hue=y_pred, palette="viridis", alpha=0.6, marker='o')
plt.title("K-Means Clustering of Breast Cancer Dataset (PCA-Reduced)")
plt.xlabel("Principal Component 1")
plt.ylabel("Principal Component 2")
plt.legend(title="Cluster")
plt.grid(True)
plt.show()