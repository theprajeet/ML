import numpy as np
from collections import Counter

np.random.seed(0) # For reproducibility
x = np.random.rand(100)

labels = []
for xi in x[:50]:
    if xi <= 0.5:
        labels.append(1) # Class 1
    else:
        labels.append(2) # Class 2

def knn_classify(x_train, y_train, x_test_point, k):
    distances = [abs(xi - x_test_point) for xi in x_train]
    k_indices = np.argsort(distances)[:k]
    k_labels = [y_train[i] for i in k_indices]
    most_common = Counter(k_labels).most_common(1)
    return most_common[0][0]

k_values = [1, 2, 3, 4, 5, 20, 30]

results = {}
for k in k_values:
    predicted_labels = []
    for test_point in x[50:]:
        label = knn_classify(x[:50], labels, test_point, k)
        predicted_labels.append(label)
    results[k] = predicted_labels

for k in k_values:
    print(f"\nResults for k={k}:")
    print(results[k])