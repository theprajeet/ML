import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import fetch_olivetti_faces
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.decomposition import PCA

data = fetch_olivetti_faces(shuffle=True, random_state=42)
X = data.data
y = data.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

pca = PCA(n_components=100, whiten=True, random_state=42)
X_train_pca = pca.fit_transform(X_train)
X_test_pca = pca.transform(X_test)

gnb = GaussianNB()
gnb.fit(X_train_pca, y_train)

y_pred = gnb.predict(X_test_pca)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy with PCA: {accuracy * 100:.2f}%')

print("\nClassification Report:")
print(classification_report(y_test, y_pred, zero_division=0))

X_pca_full = pca.fit_transform(X)
cv_scores = cross_val_score(gnb, X_pca_full, y, cv=5, scoring='accuracy')
print(f'\nCross-validation accuracy with PCA: {cv_scores.mean() * 100:.2f}%')