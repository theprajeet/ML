import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_boston # For Linear Regression
import warnings
warnings.filterwarnings('ignore')

print("\n--- Linear Regression on Boston Housing Dataset ---")

boston = load_boston()
df_boston = pd.DataFrame(boston.data, columns=boston.feature_names)
df_boston['PRICE'] = boston.target

X = df_boston[['RM']]
y = df_boston['PRICE']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,
random_state=42)

lr_model = LinearRegression()
lr_model.fit(X_train, y_train)

y_pred = lr_model.predict(X_test)

print("R2 Score:", r2_score(y_test, y_pred))
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))

plt.figure(figsize=(8, 5))
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Predicted')
plt.xlabel("Average number of rooms per dwelling (RM)")
plt.ylabel("House Price")
plt.title("Linear Regression: Boston Housing")
plt.legend()
plt.show()


print("\n--- Polynomial Regression on Auto MPG Dataset ---")
auto_data = sns.load_dataset("mpg")

auto_data.dropna(inplace=True)

X = auto_data[['horsepower']].values
y = auto_data['mpg'].values
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

poly = PolynomialFeatures(degree=2)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

poly_model = LinearRegression()

poly_model.fit(X_train_poly, y_train)

y_pred_poly = poly_model.predict(X_test_poly)
# Evaluation
print("R2 Score:", r2_score(y_test, y_pred_poly))
print("Mean Squared Error:", mean_squared_error(y_test, y_pred_poly))

plt.figure(figsize=(8, 5))
# Sort values for smooth curve
sort_idx = X_test[:, 0].argsort()
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test[sort_idx], y_pred_poly[sort_idx], color='green', linewidth=2, label='Predicted Curve')
plt.xlabel("Horsepower")
plt.ylabel("Miles per Gallon (mpg)")
plt.title("Polynomial Regression: Auto MPG")
plt.legend()
plt.show()